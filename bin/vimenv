#!/bin/sh

TOPDIR=~/.vimenv

init()
{
	mkdir -p $TOPDIR/versions
	mkdir -p $TOPDIR/src
	cd $TOPDIR/src
	git clone https://github.com/vim/vim.git
	git clone https://github.com/neovim/neovim.git
}

install_list()
{
	cd $TOPDIR/src/vim
	#git pull --tags 1>/dev/null 2>&1
	echo '- vim list'
	git tag --sort=committerdate|tail -n 50
	echo ''
	cd $TOPDIR/src/neovim
	echo '- neovim list'
	git tag
}

update_target()
{
	TARGET=$1
	shift

	cd $TOPDIR/src/$TARGET/src
	make distclean 1>/dev/null 2>&1
	git checkout master 1>/dev/null 2>&1
	git pull origin master 1>/dev/null 2>&1
	git pull --tags 1>/dev/null 2>&1
}

update()
{
	case $1 in
		all)
			update_target 'vim'
			update_target 'neovim'
			;;
		vim)
			update_target 'vim'
			;;
		neovim)
			update_target 'neovim'
			;;
	esac
}

versions()
{
	echo "install list"
	echo "- vim"
	ls $TOPDIR/versions/vim
	echo ''
	echo "- neovim"
	ls $TOPDIR/versions/neovim
}

build_vim()
{
	TARGET='vim'
	VERSION=$1
	shift

	INSTALL_DIR=$TOPDIR/versions/$TARGET/$VERSION

	update 'vim'

	cd $TOPDIR/src/$TARGET/src
	git checkout $VERSION 1>/dev/null 2>&1
	if [ $? -ne 0 ]; then
		return 1
	fi

	OPT="--disable-gui --without-x"
	if [ `uname`=='Darwin' ]; then
		OPT="$OPT --disable-darwin"
	fi

	./configure --prefix=$INSTALL_DIR $OPT $* && make && make install
	if [ $? -ne 0 ]; then
		return 1
	fi
}

build_neovim()
{
	TARGET='neovim'
	VERSION=$1
	shift

	INSTALL_DIR=$TOPDIR/versions/$TARGET/$VERSION

	update 'neovim'

	cd $TOPDIR/src/$TARGET
	make distclean 1>/dev/null 2>&1

	git checkout $VERSION 1>/dev/null 2>&1
	if [ $? -ne 0 ]; then
		return 1
	fi

	make CMAKE_EXTRA_FLAGS="-DCMAKE_INSTALL_PREFIX=$INSTALL_DIR" $* && make install
	if [ $? -ne 0 ]; then
		return 1
	fi

	cd $INSTALL_DIR/bin
	ln -s nvim vim
}

build()
{
	TARGET=$1
	VERSION=$2
	shift
	shift

	mkdir -p $TOPDIR/versions/$TARGET

	case $TARGET in
		vim)
			build_vim $VERSION $*
			;;
		neovim)
			build_neovim $VERSION $*
			;;
	esac

	INSTALL_DIR=$TOPDIR/versions/$TARGET/$VERSION
	if [ $? -ne 0 ]; then
		cd $TOPDIR
		rm -rf $INSTALL_DIR
		return 1
	fi
}

print_help()
{
	echo "vimenv command ..."
	echo "list                         print installalbe vim versions"
	echo "install <target> <version>   install vim"
	echo "global  <target> <version>   use vim"
	echo "update                       update"
}

case $1 in
	init)
		shift
		init
		;;
	list)
		shift
		install_list
		;;
	install)
		shift
		build $*
		;;
	global)
		shift
		rm -f $TOPDIR/libexec
		case $1 in
			system)
				;;
			*)
				ln -s $TOPDIR/versions/$1/$2 $TOPDIR/libexec
				;;
		esac
		;;
	update)
		shift
		update 'all'
		;;
	versions)
		shift
		versions
		;;
	*)
		print_help
		;;
esac
